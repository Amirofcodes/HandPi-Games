name: Build and Push Docker Images

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/handpi

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - service: backend
            context: .
            dockerfile: docker/backend/Dockerfile.prod
          - service: frontend
            context: .
            dockerfile: docker/frontend/Dockerfile.prod
          - service: router
            context: .
            dockerfile: docker/router/Dockerfile.prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ toLowerCase(env.IMAGE_PREFIX) }}-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ toLowerCase(env.IMAGE_PREFIX) }}-${{ matrix.service }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ toLowerCase(env.IMAGE_PREFIX) }}-${{ matrix.service }}:buildcache,mode=max

  update-kustomization:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Kustomization
        run: |
          cd deploy
          # Update image tags in kustomization.yaml
          sed -i "s|newTag: .*|newTag: main-${GITHUB_SHA::7}|g" kustomization.yaml

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add kustomization.yaml
          git commit -m "Update image tags to main-${GITHUB_SHA::7}" || echo "No changes to commit"
          git push || echo "No changes to push"
